name: Tests sql-tunnels
on:
  push:
    branches:
      - master
      - main
      - "release/*"
  pull_request:


jobs:
  test:
    name: "sql-tunnels test"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          check-latest: true
          cache: true
          go-version: '~1.21'

      - run: go version
      - run: go mod download # Not required, used to segregate module download vs test times
      - run: make coverage
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4

  linters:
    name: "sql-tunnels linters"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          check-latest: true
          cache: true
          go-version: '~1.21'
      - run: go version
      - run: go mod download # Not required, used to segregate module download vs test times
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v5
        with:
          version: v1.55.2
          args: -v

  generate:
    name: Correctly generated files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          check-latest: true
          cache: true
          go-version: '~1.21'
      - run: go mod tidy
      - run: git diff --exit-code go.mod
      - name: Error message
        if: ${{ failure() }}
        run: echo '::error file=go.mod,line=1,col=1::Inconsistent go mod file. Ensure you have run `go mod tidy` and committed the files locally.'; echo '::error file=enterprise_mod.go,line=1,col=1::Possible missing enterprise exclusive dependencies.'

      - run: make fmt
      - run: git diff --exit-code
      - name: Error message
        if: ${{ failure() }}
        run: echo 'Not formatted files. Ensure you have run `make fmt` and committed the files locally.'